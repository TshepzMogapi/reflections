What happens when you initialize a repository? Why do you need to do it?

a hidden git directory is created, to use the folder as your repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

It is different in a way that it prepares the files that you will commint to
the repository, the working directory will always contain the files, but a staging area
will have only the files added into it. The repository will be the files that were committed
from the staging area.

How can you use the staging area to make sure you have one commit per logical
change?

by using git add onr file at a time 

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Situations when you want to experiment with a certain feauture,
without loosing a working version of a file. You could create a branch 
just for experimental purposes.

How do the diagrams help you visualize the branch structure?

They make me feel like I have a grasp understanding what i have learnt so far,
Visualizing branches helps me understand what branch am I on and what commits
are related to that branch.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

The result is one branch, we represent it that way because it is now the current
master branch.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

Automatic
Pros
-
We can later decide which methods works best

Cons
- You can end up with the same kind of code in one file


Manually
Pros
- You can identify and use common sense as to
what you should include in your final file commit

Cons
- you might have to go through a lot of code.